/*PERSON_AUDIT(CREATED, TYPE_EVENT, ROW_ID, NAME, AGE, GENDER, ADDRESS)*/
DROP TRIGGER IF EXISTS TRG_PERSON_INSERT_AUDIT ON PERSON;

DROP TRIGGER IF EXISTS TRG_PERSON_UPDATE_AUDIT ON PERSON;

DROP TRIGGER IF EXISTS TRG_PERSON_DELETE_AUDIT ON PERSON;

DROP FUNCTION IF EXISTS FNC_TRG_PERSON_INSERT_AUDIT ();

DROP FUNCTION IF EXISTS FNC_TRG_PERSON_UPDATE_AUDIT ();

DROP FUNCTION IF EXISTS FNC_TRG_PERSON_DELETE_AUDIT ();

TRUNCATE TABLE PERSON_AUDIT;

CREATE OR REPLACE FUNCTION FNC_TRG_PERSON_AUDIT () RETURNS TRIGGER AS $FNC_TRG_PERSON_AUDIT$
BEGIN
    IF (TG_OP = 'INSERT') THEN
        INSERT INTO PERSON_AUDIT(ROW_ID, NAME, AGE, GENDER, ADDRESS)
        VALUES (NEW.ID, NEW.NAME, NEW.AGE, NEW.GENDER, NEW.ADDRESS);
    ELSIF (TG_OP = 'UPDATE') THEN
        INSERT INTO PERSON_AUDIT(TYPE_EVENT, ROW_ID, NAME, AGE, GENDER, ADDRESS)
        VALUES ('U', OLD.ID, OLD.NAME, OLD.AGE, OLD.GENDER, OLD.ADDRESS);
    ELSIF (TG_OP = 'DELETE') THEN
        INSERT INTO PERSON_AUDIT(TYPE_EVENT, ROW_ID, NAME, AGE, GENDER, ADDRESS)
        VALUES ('D', OLD.ID, OLD.NAME, OLD.AGE, OLD.GENDER, OLD.ADDRESS);
    END IF;
    RETURN COALESCE(NEW, OLD);
END;
$FNC_TRG_PERSON_AUDIT$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER TRG_PERSON_AUDIT
AFTER INSERT
OR UPDATE
OR DELETE ON PERSON FOR EACH ROW
EXECUTE FUNCTION FNC_TRG_PERSON_AUDIT ();

INSERT INTO
	PERSON (ID, NAME, AGE, GENDER, ADDRESS)
VALUES
	(10, 'Damir', 22, 'male', 'Irkutsk');

UPDATE PERSON
SET
	NAME = 'Bulat'
WHERE
	ID = 10;

UPDATE PERSON
SET
	NAME = 'Damir'
WHERE
	ID = 10;

DELETE FROM PERSON
WHERE
	ID = 10;

SELECT
	*
FROM
	PERSON_AUDIT;